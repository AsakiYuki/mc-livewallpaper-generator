// ! DO NOT EDIT THIS FILE
import { Anchor, Log, Modify, UI, Vanilla } from "jsonui-scripting";
import { CONFIGS } from "./config";

export let bgContainer = UI.panel({
    size: "100%",
    anchor: Anchor.Center
}, {
    name: "frames_container",
    namespace: "asakiyuki_live_wallpaper"
});

switch (CONFIGS.support) {
    case "custom_ui": {
        // Neko UI
        Modify.register(".hans_common_files/.hans_animated_background.json", "bg_anim").addChild(bgContainer).modify.controls.remove("bg_anim_b");
        Modify.register(".hans_common_files/.hans_animated_background.json", "blur").override.setProperties({
            texture: "textures/wallpapers/blur." + CONFIGS.exportType,
        })

        // BetMC UI
        Modify.register("betmc_ui/betmc_common/betmc_bg_common.json", `betmc_animation_background_frame`)
            .addChild(bgContainer)
            .override.setProperties({
                size: "100%",
                anchor: Anchor.Center,
            });

        Modify.register("betmc_config/config.json", "betmc_main_config").override.setProperties({
            $use_background_static_customs: false,
            $use_setting_background_static_customs: false,
            $use_background_animation: true
        });

        break;
    }

    case "vanilla": {
        const bgContent = UI.panel({
            size: "100%",
            anchor: Anchor.Center,
        }, {
            name: "bg_content",
            namespace: "asakiyuki_live_wallpaper"
        }).addChild(bgContainer);

        const modifiers = [
            Vanilla.start.startScreen(),
            Vanilla.settings.settingsScreenBase(),
            Vanilla.progress.worldLoadingProgressScreen(),
            Vanilla.progress.worldSavingProgressScreen(),
        ];

        modifiers.forEach(modifier => {
            modifier.override.setProperties({
                $screen_bg_content: bgContent.getPath()
            })
        })

        break;
    }

    default: {
        Log.error(`Config support only has vanilla and custom_ui!`);
        process.exitCode = 1;
    }
}
